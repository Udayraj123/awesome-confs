http_port 3128
acl to_localurls dstdomain iitg.ernet.in ::1 127.0.0.1 localhost 202.141.80.14 202.141.80.24
# tcp_outgoing_address 0.0.0.0 all
# dns_nameservers 127.0.0.1 8.8.8.8
# icp_access allow all
# dns_v4_first on

http_access allow all

# Direct proxy toggle if using outside proxy. Toggle both always_direct and never_direct!
 always_direct allow all
# never_direct allow all
# ^never_direct seems important for squid to work via cache_peer!

# select a proxy
cache_peer  202.141.80.XX parent 3128 0 no-query proxy-only login=XXXXXX:YYYYYY name=myProxyName
# cache_peer  202.141.80.YY parent 3128 0 no-query proxy-only login=XXXXXX:YYYYYY name=myProxyName
# cache_peer DIRECT parent 3128 0 no-query proxy-only

# Following does indeed load the domains through direct proxy.
always_direct allow to_localurls

### ^ END OF THINGS OF FREQUENT CHANGES ^ ###

# Now sarg is more powerful
strip_query_terms off

#>> uncomment in WINDOWS
# access_log C:\sarg\access_log\access.log
#>> uncomment in LINUX
# access_log /var/log/squid/squid.log

# cache deny to_localurls

#>>
# acl intranet_regex url_regex .iitg.ernet.in/
# always_direct allow intranet_regex

#>>
# can use dstdomain_regex
# The url_regex means to search the entire URL for the regular expression you specify. 
# example - acl Cooking1 url_regex cooking
# Note that these regular expressions are case-sensitive, so a url containing "Cooking" would not be denied.

#>>
#This is useful to divide request forwarding of ppl in in ur subnet 
#highspeed forward
#tcp_outgoing_address 10.1.0.2 good_service_net
#normal forward
#tcp_outgoing_address 10.1.0.1 normal_service_net

#>>
# Use operating system limits set by ulimit.
#acl DAYTIME time MTWHF 07:50-17:00
#acl NGTTIME time MTWHF 01:45-05:10
#DAYTIME  http_access allow lobby NGTTIME